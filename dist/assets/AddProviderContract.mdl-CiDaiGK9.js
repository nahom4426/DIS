import{Z as R,h,r as _,$ as F,u as p,T as i,bg as E,bh as N,bi as q,a3 as M,bj as S,m as A,o as $,w,d as P,N as j,a as D,b,M as T}from"./index-BA4ml571.js";import{P as x}from"./ProviderContractForm-CzAQpq8A.js";const I=R({__name:"providerContractFormDataProvider",props:{auto:{type:Boolean,default:!0}},setup(C,{expose:u}){const s=h(),a=h(),m=h(),v=_(null);function r(o){console.log("Registration form data received:",o);const t=o.get("payerContract");if(!t){const e="Missing payer contract data";return i(!1,e),Promise.reject(new Error(e))}try{const e=JSON.parse(t),g=["contractName","payerId","startDate","endDate","contractType","paymentTerms"].filter(f=>{const y=e[f];return y==null||y===""});if(g.length>0){const f=`Missing required Contract fields: ${g.join(", ")}`;return console.error("Validation failed:",f),i(!1,f),Promise.reject(new Error(f))}return d(o)}catch(e){return console.error("Error parsing contract data:",e),i(!1,"Invalid contract data format"),Promise.reject(e)}}function d(o){return console.log("Sending registration request with form data"),new Promise((t,e)=>{s.send(()=>E(o),n=>{if(n.success)console.log("Registration successful:",n.data),i(!0,"Payer contract registered successfully"),t(n);else{console.error("Registration failed:",n.error);const g=n.error||"Failed to register payer contract";i(!1,g),e(new Error(g))}})})}function l(o){return new Promise((t,e)=>{a.send(()=>N(o),n=>{n.success?(i(!0,"Payer contracts imported successfully"),t(n)):(i(!1,n.error||"Failed to import payer contracts"),e(new Error(n.error||"Failed to import payer contracts")))})})}function c(){m.send(()=>q(),o=>{try{const t=window.URL.createObjectURL(new Blob([o])),e=document.createElement("a");e.href=t,e.setAttribute("download","payer_contract_template.xlsx"),document.body.appendChild(e),e.click(),document.body.removeChild(e)}catch(t){console.error("Error downloading template:",t),i(!1,"Failed to download template")}})}return u({register:r,importFile:l,downloadTemplate:c,fileInputRef:v,pending:s.pending}),(o,t)=>F(o.$slots,"default",{register:r,registerPending:p(s).pending.value,registerError:p(s).error.value,importFile:l,importPending:p(a).pending.value,importError:p(a).error.value,downloadTemplate:c,downloadPending:p(m).pending.value,fileInputRef:v.value})}}),k={class:"bg-white rounded-lg"},U={__name:"AddProviderContract.mdl",setup(C){const u=_(!1),s=M(),a=_(),m=S();async function v(r){try{u.value=!0;const l=["providerName","email","telephone","address","tinNumber","category"].filter(e=>!r[e]);if(l.length>0)throw new Error(`Missing required fields: ${l.join(", ")}`);const c=new FormData;r.providerLogo&&c.append("logo",r.providerLogo);const o={providerName:r.providerName,providerCode:r.providerCode,description:r.description||"",email:r.email,telephone:`${r.telephone}`,category:r.category,level:r.level||"PRIMARY",address1:r.address,state:r.state||"Ethiopia",country:r.country||"Ethiopia",latitude:r.latitude||0,longitude:r.longitude||0,tinNumber:r.tinNumber,status:r.status||"ACTIVE"};c.append("provider",JSON.stringify(o)),console.log("Submitting provider data:",o);const t=await a.value.register(c);if(t.success){const e={...t.data,logoUrl:t.data.logoUrl||(t.data.logoPath?`http://localhost:8080/api/provider/logo/${t.data.logoPath}`:null)};m.add(e),a.value.props&&a.value.props.data&&a.value.props.data.onAdded&&typeof a.value.props.data.onAdded=="function"&&a.value.props.data.onAdded(e),b(),s.push("/provider_list")}else throw new Error(t.error||"Registration failed")}catch(d){console.error("Submission error:",d),i(!1,"Failed to submit form",d.message)}finally{u.value=!1}}return(r,d)=>($(),A(T,null,{default:w(()=>[P(j,{class:"",size:"lg",title:"New Provider",subtitle:"To add a new provider, please fill out the information in the fields below."},{default:w(()=>[D("div",k,[P(I,{ref_key:"formDataProvider",ref:a},{default:w(({pending:l})=>[P(x,{pending:u.value,onSubmit:v,onCancel:()=>p(b)()},null,8,["pending","onCancel"])]),_:1},512)])]),_:1})]),_:1}))}};export{U as default};
