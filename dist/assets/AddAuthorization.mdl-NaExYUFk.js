import{Z as F,h as w,r as v,$ as E,u,T as s,a0 as I,a1 as R,a2 as q,a3 as A,a4 as M,m as D,o as S,w as y,d as _,N as U,a as C,b as N,M as $}from"./index-BA4ml571.js";import{I as j}from"./authorizationForm-BPBkRnN9.js";const x=F({__name:"authorizationFormDataProvider",props:{auto:{type:Boolean,default:!0}},setup(P,{expose:c}){const i=w(),o=w(),f=w(),h=v(null);function r(n){const t=n.get("insured");if(!t){const e="Missing insured data";return s(!1,e),Promise.reject(new Error(e))}try{const e=JSON.parse(t),m=["payerUuid","firstName","fatherName","grandFatherName","gender","position","birthDate","idNumber","phone"].filter(g=>{const b=e[g];return b==null||b===""});if(m.length>0){const g=`Missing required Insured fields: ${m.join(", ")}`;return s(!1,g),Promise.reject(new Error(g))}return p(n)}catch(e){return console.error("Error parsing insured data:",e),s(!1,"Invalid insured data format"),Promise.reject(e)}}function p(n){return console.log("Sending registration request with form data"),new Promise((t,e)=>{i.send(()=>I(n),a=>{if(a.success)s(!0,"Insured member registered successfully"),t(a);else{console.error("Registration failed:",a.error);const m=a.error||"Failed to register insured member";s(!1,m),e(new Error(m))}})})}function d(n){return new Promise((t,e)=>{o.send(()=>R(n),a=>{a.success?(s(!0,"Insured members imported successfully"),t(a)):(s(!1,a.error||"Failed to import insured members"),e(new Error(a.error||"Failed to import insured members")))})})}function l(){f.send(()=>q(),n=>{try{const t=window.URL.createObjectURL(new Blob([n])),e=document.createElement("a");e.href=t,e.setAttribute("download","insured_members_template.xlsx"),document.body.appendChild(e),e.click(),document.body.removeChild(e)}catch(t){console.error("Error downloading template:",t),s(!1,"Failed to download template")}})}return c({register:r,importFile:d,downloadTemplate:l,fileInputRef:h,pending:i.pending}),(n,t)=>E(n.$slots,"default",{register:r,registerPending:u(i).pending.value,registerError:u(i).error.value,importFile:d,importPending:u(o).pending.value,importError:u(o).error.value,downloadTemplate:l,downloadPending:u(f).pending.value,fileInputRef:h.value})}}),k={class:"bg-white rounded-lg"},T=F({__name:"AddAuthorization.mdl",setup(P){const c=v(!1),i=A(),o=v(),f=M();async function h(r){try{c.value=!0;const d=["payerUuid","firstName","fatherName","grandFatherName","gender","position","birthDate","idNumber","phone"].filter(e=>!r[e]);if(d.length>0)throw new Error(`Missing required fields: ${d.join(", ")}`);const l=new FormData;r.employeePhoto&&l.append("photo",r.employeePhoto);const n={email:r.email||"",firstName:r.firstName,payerUuid:r.payerUuid,fatherName:r.fatherName,grandFatherName:r.grandFatherName,birthDate:r.birthDate,phone:r.phone,address:r.address||"",state:r.state||"Addis Ababa",country:r.country||"Ethiopia",idNumber:r.idNumber,position:r.position,gender:r.gender,status:r.status||"ACTIVE"};l.append("insured",JSON.stringify(n));const t=await o.value.register(l);if(t.success){const e={...t.data,photoUrl:t.data.photoUrl||(t.data.photoPath?`http://localhost:8080/api/insured/photo/${t.data.photoPath}`:null)};f.add(e),s(!0,"Success","Employee added successfully"),o.value.props&&o.value.props.data&&o.value.props.data.onAdded&&typeof o.value.props.data.onAdded=="function"&&o.value.props.data.onAdded(e),N(),i.push("/insured_list")}else throw new Error(t.error||"Registration failed")}catch(p){s(!1,"Failed to submit form",p.message)}finally{c.value=!1}}return(r,p)=>(S(),D($,null,{default:y(()=>[_(U,{class:"",size:"lg",title:"Add Employee",subtitle:"To add a new employee, please fill out the information in the fields below."},{default:y(()=>[C("div",k,[_(x,{ref_key:"formDataProvider",ref:o},{default:y(({pending:d})=>[_(j,{pending:c.value,onSubmit:h,onCancel:()=>u(N)()},null,8,["pending","onCancel"])]),_:1},512)])]),_:1})]),_:1}))}});export{T as default};
