{
  "version": 3,
  "sources": ["../../@customizer/modal-x/index.js", "../../@customizer/modal-x/plugins/modal.js"],
  "sourcesContent": ["import ModalParent from \"./ModalParent.vue\";\nimport { useModal } from \"./store/modal\";\nimport modal from \"./plugins/modal\";\n/**\n * Opens a modal component.\n *\n * @param {string} modalToOpen - The identifier(name of the modal file) of the modal component to open.\n * @param {Object} [data] - Optional data to pass to the modal component.\n * @param {Function} [cb] - Optional callback function to be executed after the modal is closed.\n * @returns {void}\n */\nfunction openModal(modalToOpen, data, cb) {\n  const { openModal: OM } = useModal();\n  OM(modalToOpen, data, cb);\n}\n\n/**\n * Closes an open modal component.\n *\n * @param {*} [response] - Optional response data to send back from the modal.\n * @param {boolean} [sendResponse=true] - Optional flag to determine whether to send the response data. Defaults to true.\n * @returns {void}\n */\nfunction closeModal(response = false, sendResponse = true) {\n  const { closeModal: CM } = useModal();\n  CM(response, sendResponse);\n}\n\n/**\n * Retrieves a modal component instance by its name.\n *\n * @param {string} name - The name or identifier of the modal component to retrieve.\n * @returns {any} - The instance of the modal component identified by the name.\n */\nfunction getModal(name) {\n  const { getModal: GM } = useModal();\n  return GM(name);\n}\n\n/**\n * Loads a modal component.\n *\n * @param {Object} modal - The modal component to load. Can be a Vue instance Component.\n * @returns {void}\n */\nfunction loadModal(modal) {\n  LM(modal);\n}\n\nfunction setOptions(options = {}) {\n  const { setOptions: SO } = useModal();\n  SO(options)\n}\n\n/**\n * Provides functions and components for managing modals in your application.\n *\n * @module modals\n *\n * @exports useModal - A composable for interacting with modals.\n * @exports setOptions \n * @exports getModal - Retrieves a modal component instance by its name.\n * @exports openModal - Opens a modal component with options for data and callbacks.\n * @exports loadModal - Loads a modal component with a configuration or an instance.\n * @exports closeModal - Closes an open modal with options for sending response data.\n * @exports ModalParent - A modal wrapper serving as the container for modal components.\n */\nexport { useModal, getModal, setOptions, openModal, loadModal, closeModal, ModalParent, modal as default };", "import Modal from '../Modal.vue'\nimport { createVNode, render } from 'vue'\nexport default {\n  install: (app) => {\n    const container = document.createElement(\"div\")\n    container.style.overflow = 'auto'\n    document.body.appendChild(container)\n\n    const vnode = createVNode(Modal)\n    vnode.appContext = app._context\n    render(vnode, container)  \n  }\n}"],
  "mappings": ";;;;;;;;;;;;AAAA,OAAO,iBAAiB;;;ACAxB,OAAO,WAAW;AAElB,IAAO,gBAAQ;AAAA,EACb,SAAS,CAAC,QAAQ;AAChB,UAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,cAAU,MAAM,WAAW;AAC3B,aAAS,KAAK,YAAY,SAAS;AAEnC,UAAM,QAAQ,YAAY,KAAK;AAC/B,UAAM,aAAa,IAAI;AACvB,WAAO,OAAO,SAAS;AAAA,EACzB;AACF;;;ADDA,SAAS,UAAU,aAAa,MAAM,IAAI;AACxC,QAAM,EAAE,WAAW,GAAG,IAAI,SAAS;AACnC,KAAG,aAAa,MAAM,EAAE;AAC1B;AASA,SAAS,WAAW,WAAW,OAAO,eAAe,MAAM;AACzD,QAAM,EAAE,YAAY,GAAG,IAAI,SAAS;AACpC,KAAG,UAAU,YAAY;AAC3B;AAQA,SAAS,SAAS,MAAM;AACtB,QAAM,EAAE,UAAU,GAAG,IAAI,SAAS;AAClC,SAAO,GAAG,IAAI;AAChB;AAQA,SAAS,UAAU,OAAO;AACxB,KAAG,KAAK;AACV;AAEA,SAAS,WAAW,UAAU,CAAC,GAAG;AAChC,QAAM,EAAE,YAAY,GAAG,IAAI,SAAS;AACpC,KAAG,OAAO;AACZ;",
  "names": []
}
